{"version":3,"file":"static/js/120.086f781e.chunk.js","mappings":"iMACA,EAA4B,6BAA5B,EAAsE,8BAAtE,EAAgH,6B,SCgChH,EA9BkB,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,UACXC,EACND,EADMC,MAAOC,EACbF,EADaE,KAAMC,EACnBH,EADmBG,YAAaC,EAChCJ,EADgCI,SAAUC,EAC1CL,EAD0CK,OAAQC,EAClDN,EADkDM,aAEpD,OACE,iBAAKC,UAAWC,EAAhB,UACGL,GACC,gBACEM,IAAG,UAAKC,EAAAA,EAAAA,YAAL,OAA4BP,GAC/BQ,MAAM,QACNC,IAAKX,GAASC,KAGhB,gBAAKO,IAAKI,EAAQ,KAAoBD,IAAI,YAAYD,MAAM,WAE9D,iBAAKJ,UAAWC,EAAhB,WACE,gBAAID,UAAWC,EAAf,cAAiCP,GAASC,MAC1C,wCAAgBY,KAAKC,MAAqB,GAAfT,GAA3B,QACA,sCAAcF,MACd,mCACU,IACPC,EACEW,KAAI,SAAAC,GACH,OAAOA,EAAMf,IACd,IACAgB,KAAK,cAKjB,C","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieCard.module.css?b064","components/MovieDetails/MovieCard.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieCard\":\"MovieCard_movieCard__yV-Gb\",\"movieTitle\":\"MovieCard_movieTitle__E9aDZ\",\"movieInfo\":\"MovieCard_movieInfo__LN5xV\"};","import { moviesApi } from 'services/moviesApi';\nimport PropTypes from 'prop-types';\nimport css from './MovieCard.module.css';\nconst MovieCard = ({ movieData }) => {\n  const { title, name, poster_path, overview, genres, vote_average } =\n    movieData;\n  return (\n    <div className={css.movieCard}>\n      {poster_path ? (\n        <img\n          src={`${moviesApi.POSTER_URL}${poster_path}`}\n          width=\"250px\"\n          alt={title || name}\n        />\n      ) : (\n        <img src={require('./no-poster.png')} alt=\"No Poster\" width=\"250px\" />\n      )}\n      <div className={css.movieInfo}>\n        <h2 className={css.movieTitle}> {title || name}</h2>\n        <p>User Score: {Math.round(vote_average * 10)}%</p>\n        <p>Overview: {overview}</p>\n        <p>\n          Genres:{' '}\n          {genres\n            .map(genre => {\n              return genre.name;\n            })\n            .join(', ')}\n        </p>\n      </div>\n    </div>\n  );\n};\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  movieData: PropTypes.shape({\n    title: PropTypes.string,\n    name: PropTypes.string,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired }).isRequired\n    ).isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }),\n};\n"],"names":["movieData","title","name","poster_path","overview","genres","vote_average","className","css","src","moviesApi","width","alt","require","Math","round","map","genre","join"],"sourceRoot":""}