{"version":3,"file":"static/js/76.2e71d820.chunk.js","mappings":"4OACA,EAAgC,4B,SC8ChC,EAzCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,aAAuBH,GAASI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAQM,EAAKP,KAA3B,GACtC,GAAE,CAACE,KAGF,SAACM,EAAA,QAAD,WACE,2BACGR,IACC,eAAIS,UAAWC,EAAf,SACGV,EAAKW,KAAI,SAAAC,GACR,OACE,0BACGA,EAAMC,cACL,gBACEC,IAAG,UAAKT,EAAAA,EAAAA,YAAL,OAA4BO,EAAMC,cACrCE,MAAM,QACNC,IAAKJ,EAAMK,QAGb,gBACEH,IAAKI,EAAQ,MACbF,IAAI,YACJD,MAAM,WAGV,kCAAUH,EAAMK,SAChB,uCAAeL,EAAMO,eAfdP,EAAMQ,GAkBlB,OAGHpB,IAAQ,0CAIjB,C,oEC7CD,MAA0B,yBAA1B,EAA2D,uB,SCS3D,EARgB,SAAC,GAAyB,IAAvBqB,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,iBAAKb,UAAWC,EAAhB,UACGY,IAAS,eAAIb,UAAWC,EAAf,SAA2BY,IACpCD,IAGN,C,2GCPKE,EAAgB,4CAEhBC,EACM,mBADNA,EAEI,eAFJA,EAGW,SAHXA,EAIE,WAJFA,EAKK,WAEXC,IAAAA,SAAAA,QAViB,gCAWjB,IAAMC,EAAiB,mCAAG,6GAECD,IAAAA,IAAUD,EAAsBD,GAFjC,UAGE,OADlBI,EAFgB,QAGTC,OAHS,yCAIbD,GAJa,aAOhB,IAAIE,MAAMF,GAPM,yFAAH,qDAUjBG,EAAgB,mCAAG,WAAMC,GAAN,gGAEEN,IAAAA,IACrBD,EAAoBD,EAAgB,UAAYQ,GAH7B,UAMG,OAJlBJ,EAFe,QAMRC,OANQ,yCAOZD,GAPY,aAUf,IAAIE,MAAMF,GAVK,mHAAH,sDAehBK,EAAe,mCAAG,WAAM9B,GAAN,gGAEGuB,IAAAA,IACrBD,EAA2BtB,EAAUqB,GAHnB,UAMI,OAJlBI,EAFc,QAMPC,OANO,yCAOXD,GAPW,aAUd,IAAIE,MAAMF,GAVI,mHAAH,sDAefM,EAAY,mCAAG,WAAM/B,GAAN,gGAEMuB,IAAAA,IACrBD,EAA2BtB,EAAUsB,EAAkBD,GAHxC,UAMO,OAJlBI,EAFW,QAMJC,OANI,yCAORD,GAPQ,aASjBO,QAAQC,IAAIR,GACN,IAAIE,MAAMF,GAVC,sHAAH,sDAeZS,EAAe,mCAAG,WAAMlC,GAAN,gGAEGuB,IAAAA,IACrBD,EAA2BtB,EAAUsB,EAAqBD,GAHxC,UAKI,OAHlBI,EAFc,QAKPC,OALO,yCAMXD,GANW,aASd,IAAIE,MAAMF,GATI,mHAAH,sDAcRtB,EAAY,CACvBqB,kBAAAA,EACAI,iBAAAA,EACAE,gBAAAA,EACAC,aAAAA,EACAG,gBAAAA,EACAC,WApFiB,sC","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","services/moviesApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\"};","import Section from 'components/Section/Section';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { moviesApi } from 'services/moviesApi';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    moviesApi.getMovieCast(movieId).then(({ data }) => setCast(data.cast));\n  }, [movieId]);\n\n  return (\n    <Section>\n      <div>\n        {cast && (\n          <ul className={css.castContainer}>\n            {cast.map(actor => {\n              return (\n                <li key={actor.id}>\n                  {actor.profile_path ? (\n                    <img\n                      src={`${moviesApi.POSTER_URL}${actor.profile_path}`}\n                      width=\"150px\"\n                      alt={actor.name}\n                    />\n                  ) : (\n                    <img\n                      src={require('./no-poster.png')}\n                      alt=\"No Poster\"\n                      width=\"150px\"\n                    />\n                  )}\n                  <p>Name: {actor.name}</p>\n                  <p>Character: {actor.character}</p>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        {!cast && <p>Loading...</p>}\n      </div>\n    </Section>\n  );\n};\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"title\":\"Section_title__SLHvV\"};","import css from './Section.module.css';\nimport PropTypes from 'prop-types';\nconst Section = ({ children, title }) => {\n  return (\n    <div className={css.section}>\n      {title && <h2 className={css.title}>{title}</h2>}\n      {children}\n    </div>\n  );\n};\nexport default Section;\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY_TEMPL = '?api_key=9bff41db57042f21e241625af111febf';\nconst POSTER_URL = 'https://image.tmdb.org/t/p/original';\nconst END_POINTS = {\n  TRENDING: 'trending/all/day',\n  SEARCH: 'search/movie',\n  MOVIE_DETAILS: 'movie/',\n  CAST: '/credits',\n  REVIEWS: '/reviews',\n};\naxios.defaults.baseURL = BASE_URL;\nconst getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(END_POINTS.TRENDING + API_KEY_TEMPL);\n    if (response.status === 200) {\n      return response;\n    }\n\n    throw new Error(response);\n  } catch (error) {}\n};\nconst getSearchedMovie = async query => {\n  try {\n    const response = await axios.get(\n      END_POINTS.SEARCH + API_KEY_TEMPL + '&query=' + query\n    );\n\n    if (response.status === 200) {\n      return response;\n    }\n\n    throw new Error(response);\n  } catch (error) {\n    return;\n  }\n};\nconst getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      END_POINTS.MOVIE_DETAILS + movieId + API_KEY_TEMPL\n    );\n\n    if (response.status === 200) {\n      return response;\n    }\n\n    throw new Error(response);\n  } catch (error) {\n    return;\n  }\n};\nconst getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.CAST + API_KEY_TEMPL\n    );\n\n    if (response.status === 200) {\n      return response;\n    }\n    console.log(response);\n    throw new Error(response);\n  } catch (error) {\n    return;\n  }\n};\nconst getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.REVIEWS + API_KEY_TEMPL\n    );\n    if (response.status === 200) {\n      return response;\n    }\n\n    throw new Error(response);\n  } catch (error) {\n    return;\n  }\n};\nexport const moviesApi = {\n  getTrendingMovies,\n  getSearchedMovie,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n  POSTER_URL,\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","moviesApi","then","data","Section","className","css","map","actor","profile_path","src","width","alt","name","require","character","id","children","title","API_KEY_TEMPL","END_POINTS","axios","getTrendingMovies","response","status","Error","getSearchedMovie","query","getMovieDetails","getMovieCast","console","log","getMovieReviews","POSTER_URL"],"sourceRoot":""}