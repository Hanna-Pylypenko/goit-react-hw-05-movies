{"version":3,"file":"static/js/403.33a6009e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","components/Movies/SearchBar.jsx","components/Movies/Movies.jsx","pages/MoviesView.jsx","services/moviesApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import css from './Container.module.css';\nconst Container = ({ children }) => {\n  return <div className={css.container}>{children}</div>;\n};\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesListItem\":\"MoviesList_moviesListItem__OFqms\"};","import { Link, useLocation } from 'react-router-dom';\nimport Section from 'components/Section/Section';\nimport css from './MoviesList.module.css';\nimport PropTypes from 'prop-types';\nconst MoviesList = ({ movies, title }) => {\n  const location = useLocation();\n\n  return (\n    <Section title={title}>\n      {movies.map(({ id, title, name }) => {\n        return (\n          <li key={id.toString()} className={css.moviesListItem}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title || name}\n            </Link>\n          </li>\n        );\n      })}\n    </Section>\n  );\n};\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  title: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"title\":\"Section_title__SLHvV\"};","import css from './Section.module.css';\nimport PropTypes from 'prop-types';\nconst Section = ({ children, title }) => {\n  return (\n    <div className={css.section}>\n      {title && <h2 className={css.title}>{title}</h2>}\n      {children}\n    </div>\n  );\n};\nexport default Section;\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import Section from 'components/Section/Section';\nimport { useState } from 'react';\n\nconst SearchBar = ({ onSubmit, searchedMovie }) => {\n  const [query, setQuery] = useState(searchedMovie ?? '');\n\n  const onQuerySubmit = e => {\n    e.preventDefault();\n    if (query) {\n      onSubmit(query);\n    }\n  };\n\n  return (\n    <Section>\n      <form className=\"searchQuery\" onSubmit={onQuerySubmit}>\n        <input\n          type=\"text\"\n          name=\"movieSearch\"\n          value={query}\n          onChange={e => setQuery(e.currentTarget.value)}\n        />\n        <button className=\"sumbitQuery\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </Section>\n  );\n};\nexport default SearchBar;\n","import Section from 'components/Section/Section';\nimport SearchBar from './SearchBar';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { moviesApi } from 'services/moviesApi';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryFromUrl = searchParams.get('query');\n  const [totalPages, setTotalPages] = useState(null);\n  const [query, setQuery] = useState(queryFromUrl ?? '');\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const location = useLocation();\n\n  const onSubmit = data => {\n    setQuery(data);\n    setSearchParams(`?query=${data}`);\n  };\n\n  useEffect(() => {\n    if (query) {\n      moviesApi.getSearchedMovie(query).then(({ data }) => {\n        setSearchedMovies(data.results);\n        setTotalPages(data.total_pages);\n      });\n    }\n  }, [query]);\n\n  return (\n    <Section>\n      <SearchBar onSubmit={onSubmit} searchedMovie={query} />\n      {totalPages === 0 && <h3>We didn't find anything.Try again.</h3>}\n      {searchedMovies !== null && <MoviesList movies={searchedMovies} location={location}/>}\n    </Section>\n  );\n};\nexport default Movies;\n","import Container from 'components/Container/Container';\nimport Movies from 'components/Movies/Movies';\n\nconst MoviesView = () => {\n  return (\n    <Container>\n      <Movies />\n    </Container>\n  );\n};\nexport default MoviesView;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY_TEMPL = '?api_key=9bff41db57042f21e241625af111febf';\nconst POSTER_URL = 'https://image.tmdb.org/t/p/original';\nconst END_POINTS = {\n  TRENDING: 'trending/all/day',\n  SEARCH: 'search/movie',\n  MOVIE_DETAILS: 'movie/',\n  CAST: '/credits',\n  REVIEWS: '/reviews',\n};\naxios.defaults.baseURL = BASE_URL;\nconst getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(END_POINTS.TRENDING + API_KEY_TEMPL);\n    if (response.status === 200) {\n      return response;\n    }\n\n    throw new Error(response);\n  } catch (error) {}\n};\nconst getSearchedMovie = async query => {\n  try {\n    const response = await axios.get(\n      END_POINTS.SEARCH + API_KEY_TEMPL + '&query=' + query\n    );\n\n    if (response.status === 200) {\n      return response;\n    }\n\n    throw new Error(response);\n  } catch (error) {\n    return;\n  }\n};\nconst getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      END_POINTS.MOVIE_DETAILS + movieId + API_KEY_TEMPL\n    );\n\n    if (response.status === 200) {\n      return response;\n    }\n\n    throw new Error(response);\n  } catch (error) {\n    return;\n  }\n};\nconst getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.CAST + API_KEY_TEMPL\n    );\n\n    if (response.status === 200) {\n      return response;\n    }\n    console.log(response);\n    throw new Error(response);\n  } catch (error) {\n    return;\n  }\n};\nconst getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.REVIEWS + API_KEY_TEMPL\n    );\n    if (response.status === 200) {\n      return response;\n    }\n\n    throw new Error(response);\n  } catch (error) {\n    return;\n  }\n};\nexport const moviesApi = {\n  getTrendingMovies,\n  getSearchedMovie,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n  POSTER_URL,\n};\n"],"names":["children","className","css","movies","title","location","useLocation","Section","map","id","name","to","state","from","toString","onSubmit","searchedMovie","useState","query","setQuery","e","preventDefault","type","value","onChange","currentTarget","useSearchParams","searchParams","setSearchParams","queryFromUrl","get","totalPages","setTotalPages","searchedMovies","setSearchedMovies","useEffect","moviesApi","then","data","results","total_pages","MoviesList","Container","API_KEY_TEMPL","END_POINTS","axios","getTrendingMovies","response","status","Error","getSearchedMovie","getMovieDetails","movieId","getMovieCast","console","log","getMovieReviews","POSTER_URL"],"sourceRoot":""}